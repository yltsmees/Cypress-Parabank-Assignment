{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 8,
    "pending": 0,
    "failures": 2,
    "start": "2023-11-16T20:06:50.591Z",
    "end": "2023-11-16T20:07:35.304Z",
    "duration": 44713,
    "testsRegistered": 10,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4894e1d7-9ba9-4b9f-8eb7-fccfe9d545d1",
      "title": "",
      "fullFile": "cypress\\e2e\\Parabank Website.cy.js",
      "file": "cypress\\e2e\\Parabank Website.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "01fb191a-7539-4ff1-9af7-9d0938a77b49",
          "title": "Parabank automation testing assignment",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with BLANK username and password",
              "fullTitle": "Parabank automation testing assignment Login with BLANK username and password",
              "timedOut": null,
              "duration": 2940,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[type=\"text\"]').clear();\ncy.get('input[type=\"password\"]').clear();\ncy.get('input[type=\"submit\"]').click();\n//Assert that loging was not successful and we get error\ncy.contains(\"h1\", \"Error!\").should(\"be.visible\");\ncy.contains(\"p\", \"Please enter a username and password.\").should(\"be.visible\");",
              "err": {},
              "uuid": "3ce82c9b-7418-4580-8794-235efce0729b",
              "parentUUID": "01fb191a-7539-4ff1-9af7-9d0938a77b49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Register with valid information",
              "fullTitle": "Parabank automation testing assignment Register with valid information",
              "timedOut": null,
              "duration": 6354,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"userData.json\").then(userData => {\n  //Find Register link and assert its correct page\n  cy.get('a[href*=\"register.htm\"]').click();\n  cy.contains(\"h1\", \"Signing up is easy!\").should(\"be.visible\");\n  // Fill out the form fields\n  cy.get('input[name=\"customer.firstName\"]').type(userData.oldUser.firstName);\n  cy.get('input[name=\"customer.lastName\"]').type(userData.oldUser.lastName);\n  cy.get('input[name=\"customer.address.street\"]').type(userData.oldUser.street);\n  cy.get('input[name=\"customer.address.city\"]').type(userData.oldUser.city);\n  cy.get('input[name=\"customer.address.state\"]').type(userData.oldUser.state);\n  cy.get('input[name=\"customer.address.zipCode\"]').type(userData.oldUser.zipCode);\n  cy.get('input[name=\"customer.phoneNumber\"]').type(userData.oldUser.phoneNumber);\n  cy.get('input[name=\"customer.ssn\"]').type(userData.oldUser.ssn);\n  cy.get('input[name=\"customer.username\"]').type(fakeUsername);\n  cy.get('input[name=\"customer.password\"]').type(fakePassword);\n  cy.get('input[name=\"repeatedPassword\"]').type(fakePassword);\n  cy.get('input[type=\"submit\"][value=\"Register\"]').click();\n  //Assert that registration was successful\n  cy.contains(\"h1\", \"Welcome \" + fakeUsername).should(\"be.visible\");\n  cy.contains(\"p\", \"Your account was created successfully. You are now logged in.\").should(\"be.visible\");\n  cy.get('a[href*=\"logout.htm\"]').click();\n});",
              "err": {},
              "uuid": "ff613899-d4eb-4291-b9fc-1d15cd10358f",
              "parentUUID": "01fb191a-7539-4ff1-9af7-9d0938a77b49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with correct username and password",
              "fullTitle": "Parabank automation testing assignment Login with correct username and password",
              "timedOut": null,
              "duration": 3443,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Parabank saves registration info for limited time i think\ncy.get('input[type=\"text\"]').type(fakeUsername);\ncy.get('input[type=\"password\"]').type(fakePassword);\ncy.get('input[type=\"submit\"]').click();\ncy.contains(\"h1\", \"Accounts Overview\").should(\"be.visible\");",
              "err": {},
              "uuid": "7f5bfc53-62b3-4608-ac62-133103ebfca4",
              "parentUUID": "01fb191a-7539-4ff1-9af7-9d0938a77b49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Open savings account",
              "fullTitle": "Parabank automation testing assignment Open savings account",
              "timedOut": null,
              "duration": 3240,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('a[href*=\"openaccount.htm\"]').click();\ncy.get(\"#type\").select(\"SAVINGS\");\ncy.wait(1000);\ncy.get(\"#fromAccountId\").find(\"option\").eq(0).invoke(\"val\").then(value => {\n  cy.get(\"#fromAccountId\").select(value);\n});\ncy.get('input[type=\"submit\"][value=\"Open New Account\"]').click();\ncy.contains(\"h1\", \"Account Opened!\").should(\"be.visible\");",
              "err": {},
              "uuid": "246982b7-503f-4c9d-bb9d-fdd76f05db73",
              "parentUUID": "01fb191a-7539-4ff1-9af7-9d0938a77b49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Transfer funds (positive number)",
              "fullTitle": "Parabank automation testing assignment Transfer funds (positive number)",
              "timedOut": null,
              "duration": 3033,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('a[href*=\"transfer.htm\"]').click();\ncy.wait(1000);\ncy.get('input[name=\"input\"]').type(PosMoney);\ncy.get(\"#fromAccountId\").find(\"option\").eq(0).invoke(\"val\").then(value => {\n  cy.get(\"#fromAccountId\").select(value);\n});\ncy.get(\"#fromAccountId\").find(\"option\").eq(1).invoke(\"val\").then(value => {\n  cy.get(\"#toAccountId\").select(value);\n});\ncy.get('input[type=\"submit\"][value=\"Transfer\"]').click();\ncy.contains(\"h1\", \"Transfer Complete!\").should(\"be.visible\");\ncy.get(\"#amount\").should(\"be.visible\").contains(\"$\" + PosMoney);",
              "err": {},
              "uuid": "af03d838-babe-4a50-9697-48b127de9700",
              "parentUUID": "01fb191a-7539-4ff1-9af7-9d0938a77b49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Transfer funds (negative number)",
              "fullTitle": "Parabank automation testing assignment Transfer funds (negative number)",
              "timedOut": null,
              "duration": 7079,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('a[href*=\"transfer.htm\"]').click();\ncy.wait(1000);\ncy.get('input[name=\"input\"]').type(NegMoney);\ncy.get(\"#fromAccountId\").find(\"option\").eq(0).invoke(\"val\").then(value => {\n  cy.get(\"#fromAccountId\").select(value);\n});\ncy.get(\"#fromAccountId\").find(\"option\").eq(1).invoke(\"val\").then(value => {\n  cy.get(\"#toAccountId\").select(value);\n});\ncy.get('input[type=\"submit\"][value=\"Transfer\"]').click();\n//Assert that transfer was NOT successful\n//Error message unknown, it allows negative numbers?\ncy.contains(\"p\", \"Negative numbers not allowed\").should(\"be.visible\", {\n  timeout: 5000\n}).then(() => {\n  // Continue to the next test steps\n  cy.log(\"Transer not complete\");\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Negative numbers not allowed' within the selector: 'p' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Negative numbers not allowed' within the selector: 'p' but never did.\n    at Context.eval (webpack:///./cypress/e2e/Parabank Website.cy.js:123:7)",
                "diff": null
              },
              "uuid": "552b0b57-ccef-4958-a52a-7b343429814b",
              "parentUUID": "01fb191a-7539-4ff1-9af7-9d0938a77b49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update user contact info",
              "fullTitle": "Parabank automation testing assignment Update user contact info",
              "timedOut": null,
              "duration": 4702,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"userData.json\").then(userData => {\n  cy.get('a[href*=\"updateprofile.htm\"]').click();\n  //Assert that we are on the update profile page\n  cy.get('input[name=\"customer.firstName\"]').clear().type(userData.newUser.firstName);\n  cy.get('input[name=\"customer.lastName\"]').clear().type(userData.newUser.lastName);\n  cy.get('input[name=\"customer.address.street\"]').clear().type(userData.newUser.street);\n  cy.get('input[name=\"customer.address.city\"]').clear().type(userData.newUser.city);\n  cy.get('input[name=\"customer.address.state\"]').clear().type(userData.newUser.state);\n  cy.get('input[name=\"customer.address.zipCode\"]').clear().type(userData.newUser.zipCode);\n  cy.get('input[name=\"customer.phoneNumber\"]').clear().type(userData.newUser.phoneNumber);\n  cy.get('input[type=\"submit\"][value=\"Update Profile\"]').click();\n  cy.wait(1000);\n  //Assert that we are on the profile update was successful\n  cy.contains(\"h1\", \"Profile Updated\").should(\"be.visible\");\n  cy.contains(\"p\", \"Your updated address and phone number have been added to the system.\").should(\"be.visible\");\n});",
              "err": {},
              "uuid": "d54a42ce-6a2d-4bf8-9c4d-b27615bb4844",
              "parentUUID": "01fb191a-7539-4ff1-9af7-9d0938a77b49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Using a website contact form",
              "fullTitle": "Parabank automation testing assignment Using a website contact form",
              "timedOut": null,
              "duration": 3895,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"userData.json\").then(userData => {\n  cy.get(\"li.contact a\").click();\n  cy.wait(1000);\n  cy.get('input[name=\"name\"]').type(userData.newUser.firstName + \" \" + userData.newUser.lastName);\n  cy.get('input[name=\"email\"]').type(fakeEmail);\n  cy.get('input[name=\"phone\"]').type(userData.newUser.phoneNumber);\n  cy.get('textarea[name=\"message\"]').type(\"Hello!\");\n  cy.get('input[type=\"submit\"][value=\"Send to Customer Care\"]').click();\n  //Assert that loging out was successful and we are on the main page\n  cy.contains(\"h1\", \"Customer Care\").should(\"be.visible\");\n  cy.contains(\"p\", \"Thank you \" + userData.newUser.firstName + \" \" + userData.newUser.lastName).should(\"be.visible\");\n});",
              "err": {},
              "uuid": "7068263f-2765-4f59-a1f3-e96f20a68828",
              "parentUUID": "01fb191a-7539-4ff1-9af7-9d0938a77b49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout from the website",
              "fullTitle": "Parabank automation testing assignment Logout from the website",
              "timedOut": null,
              "duration": 1970,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('a[href*=\"logout.htm\"]').click();\n//Assert that loging out was successful and we are on the main page\ncy.contains(\"h2\", \"Customer Login\").should(\"be.visible\");\ncy.contains(\"p\", \"Username\").should(\"be.visible\");\ncy.contains(\"p\", \"Password\").should(\"be.visible\");",
              "err": {},
              "uuid": "dc88d23d-35e0-48dd-b5d4-6740a24a6a03",
              "parentUUID": "01fb191a-7539-4ff1-9af7-9d0938a77b49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Register using INVALID characters",
              "fullTitle": "Parabank automation testing assignment Register using INVALID characters",
              "timedOut": null,
              "duration": 7555,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Find Register link and assert its correct page\ncy.get('a[href*=\"register.htm\"]').click();\ncy.contains(\"h1\", \"Signing up is easy!\").should(\"be.visible\");\n// Fill out the form fields\ncy.get('input[name=\"customer.firstName\"]').type(invalidChars);\ncy.get('input[name=\"customer.lastName\"]').type(invalidChars);\ncy.get('input[name=\"customer.address.street\"]').type(invalidChars);\ncy.get('input[name=\"customer.address.city\"]').type(invalidChars);\ncy.get('input[name=\"customer.address.state\"]').type(invalidChars);\ncy.get('input[name=\"customer.address.zipCode\"]').type(invalidChars);\ncy.get('input[name=\"customer.phoneNumber\"]').type(invalidChars);\ncy.get('input[name=\"customer.ssn\"]').type(invalidChars);\ncy.get('input[name=\"customer.username\"]').type(fakeUsername);\ncy.get('input[name=\"customer.password\"]').type(invalidChars);\ncy.get('input[name=\"repeatedPassword\"]').type(invalidChars);\ncy.get('input[type=\"submit\"][value=\"Register\"]').click();\n// Assert that registration was NOT successful\n// Error message unknown, it allows any character?\ncy.contains(\"p\", \"Invalid characters not allowed\").should(\"be.visible\", {\n  timeout: 5000\n}).then(() => {\n  cy.log(\"Registration was successful using invalid characters.\");\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Invalid characters not allowed' within the selector: 'p' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Invalid characters not allowed' within the selector: 'p' but never did.\n    at Context.eval (webpack:///./cypress/e2e/Parabank Website.cy.js:193:7)",
                "diff": null
              },
              "uuid": "54eeea17-f2b9-42d2-bdab-76ac8660ff7e",
              "parentUUID": "01fb191a-7539-4ff1-9af7-9d0938a77b49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ce82c9b-7418-4580-8794-235efce0729b",
            "ff613899-d4eb-4291-b9fc-1d15cd10358f",
            "7f5bfc53-62b3-4608-ac62-133103ebfca4",
            "246982b7-503f-4c9d-bb9d-fdd76f05db73",
            "af03d838-babe-4a50-9697-48b127de9700",
            "d54a42ce-6a2d-4bf8-9c4d-b27615bb4844",
            "7068263f-2765-4f59-a1f3-e96f20a68828",
            "dc88d23d-35e0-48dd-b5d4-6740a24a6a03"
          ],
          "failures": [
            "552b0b57-ccef-4958-a52a-7b343429814b",
            "54eeea17-f2b9-42d2-bdab-76ac8660ff7e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 44211,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}